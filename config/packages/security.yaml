security:
    # a new authentication system is available since Symfony 5.1 to make
    # Symfony security more extensible and easier to understand
    # https://symfony.com/doc/current/security.html
    enable_authenticator_manager: true

    password_hashers:
        # Our user class and the algorithm we'll use to encode passwords
        # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
        # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        # # # https://symfony.com/doc/current/security/user_provider.html
        # # # In this example, users are stored via Doctrine in the database
        # # # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # # # To load users from somewhere else: https://symfony.com/doc/current/security/user_provider.html#creating-a-custom-user-provider
        # database_users:
        #     entity: { class: App\Entity\User, property: email }
        # # # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    # https://symfony.com/doc/current/security.html#a-authentication-firewalls
    firewalls:
        login: 
            pattern: ^/api/login
            stateless: true
            provider: app_user_provider
            json_login:
                username_path: email
                check_path: /api/login_check
                success_handler:
                    lexik_jwt_authentication.handler.authentication_success
                failure_handler:
                    lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # this firewall does not have a 'pattern' option because it applies to all URLs
            lazy: true
            provider: app_user_provider

    access_control:
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        - { path: '^/(%app_locales%)/admin', roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

when@test:
    # this configuration simplifies testing URLs protected by the security mechanism
    # See https://symfony.com/doc/current/testing/http_authentication.html
    security:
        firewalls:
            main:
                http_basic: ~
